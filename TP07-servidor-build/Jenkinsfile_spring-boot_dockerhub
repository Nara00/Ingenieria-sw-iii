pipeline {
    agent any

    // tools {
    //     // Install the Maven version configured as "M3" and add it to the path.
    //     maven "M3"
    // }

    stages {
        stage('Build') {
            steps {
                // Get some code from a GitHub repository
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/Nara00/spring-boot']]])

                // Run Maven on a Unix agent.
            
                sh "docker build -t test-spring-boot ."
                
                //sh 'mvn clean package spring-boot:repackage' 

                // To run Maven on a Windows agent, use
                // bat "mvn -Dmaven.test.failure.ignore=true clean package"
            }

            // post {
            //     // If Maven was able to run the tests, even if some of the test
            //     // failed, record the test results and archive the jar file.
            //     success {
            //         junit '**/target/surefire-reports/TEST-*.xml'
            //         archiveArtifacts 'target/*.jar'
            //     }
            // }
        }
        stage('Publish'){
            steps {
                script { 
                    ver = ":v" + "$BUILD_NUMBER" 
                    dockerImage_sb = "narananf/spring-boot" + ver
                    withDockerRegistry(credentialsId: 'dockerhub_id') {
                        sh "docker tag test-spring-boot:latest $dockerImage_sb"
                        sh "docker push $dockerImage_sb"
    // some block
                    }
                }
            }
        }
    }
}


